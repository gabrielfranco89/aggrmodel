?spread
??spread
?tidyr::spread
require(tidyr)
library(aggrmodel)
?aggrmodel
library(usethis)
library(devtools)
q()
n
packrat::off()
library(usethis)
proj_activate('~/Documents/git/aggrmodel/')
library(rmarkdown)
render('README.Rmd')
render('README.Rmd')
p
p
p1
p2
p
dd
p1
p2
p
p1
p1
p2
p
p1
p2
p
p1
p2
p2
p
p1
p
p <- system.file('/tmp/myeq')
p
p
install.packages('pdftools', repos='https://brieger.esalq.usp.br/CRAN/')
install.packages('pdftools', repos='https://brieger.esalq.usp.br/CRAN/')
plot(dchisq(1:10, 4))
plot(dchisq(0:10, 4))
plot(dchisq(0:10, 3))
plot(dchisq(seq(0,12, length.out=1000), 6))
plot(dchisq(seq(0,18, length.out=100), 6))
plot(dchisq(seq(0,32, length.out=100), 6))
plot(dd$y2)
plot(dd$y2)
plot(dd$y2)
plot(dd$y1)
dd
dd
plot(dd$y2)
plot(dd$y)
dd
dd
dd
dd$flag
dd
p
p+theme_void()
p+theme_void() + theme(legend.position="none")
p
pp
pp
p
p
use_logo('~/Pictures/aggrmodel.png')
library(rmarkdown)
render('README.Rmd')
library(oxygen2)
library(roxygen2)
roxygenise()
?require
roxygenise()
roxygenise()
?diag
?lm
summary.lm
structure(lm.D9)
names(lm.D9)
lm.D9$rank
lm.D9$xlevels
lm.D9$terms
X
X
plot(Y)
plot(Y)
plot(Y)
plot(Y)
dd
dd
fit
predict(fit)
points(predict(fit), col=2)
lines(predict(fit), col=2)
dim(X)
Xr
delta
betaK
betaK
beta
xbeta
plot(Y)
lines(xbeta,col=2)
Z
fit
yhat <- predict(fit)
yhat[1]
yhat[48]
render('/tmp/mailR.Rmd', output_dir='/tmp/')
q()
n
